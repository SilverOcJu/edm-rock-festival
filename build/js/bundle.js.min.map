{"version":3,"sources":["app.js","galeria.js"],"names":["scrollNav","document","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","querySelector","target","attributes","href","value","scrollIntoView","behavior","navegacionFija","barra","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body"],"mappings":"AAMA,SAAAA,YACAC,SAAAC,iBAAA,2BACAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAN,SAAAO,cAAAF,EAAAG,OAAAC,WAAAC,KAAAC,OACAC,eAAA,CACAC,SAAA,iBAMA,SAAAC,iBAEA,MAAAC,EAAAf,SAAAO,cAAA,WAEA,IAAAS,sBAAA,SAAAC,GAEAA,EAAA,GAAAC,eACAH,EAAAI,UAAAC,OAAA,QAEAL,EAAAI,UAAAE,IAAA,WAKAC,QAAAtB,SAAAO,cAAA,iBC9BA,SAAAgB,eACA,MAAAC,EAAAxB,SAAAO,cAAA,qBAEA,IAAA,IAAAkB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CAEA,MAAAC,EAAA1B,SAAA2B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAEAC,EAAAK,QAAAC,cAGA,MAAAC,EAAAjC,SAAA2B,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAIA,SAAAD,cAAA3B,GAEA,MAAA8B,EAAAC,SAAA/B,EAAAG,OAAAqB,QAAAC,UAGAJ,EAAA1B,SAAA2B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAIA,MAAAE,EAAArC,SAAA2B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAAlB,UAAAE,IAAA,WAGA,MAAAiB,EAAAtC,SAAA2B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAnB,UAAAE,IAAA,cAEAgB,EAAAH,YAAAI,GAGAA,EAAAP,QAAA,WACAM,EAAAjB,SACAoB,EAAArB,UAAAC,OAAA,eAIAiB,EAAAN,QAAA,WACAM,EAAAjB,SACAoB,EAAArB,UAAAC,OAAA,eAIA,MAAAoB,EAAAxC,SAAAO,cAAA,QACAiC,EAAAN,YAAAG,GACAG,EAAArB,UAAAE,IAAA,cD3DArB,SAAAI,iBAAA,oBAAA,WACAL,YAEAe,oBCHAd,SAAAI,iBAAA,oBAAA,WACAmB","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\n  scrollNav();\n\n  navegacionFija();\n})\n\nfunction scrollNav(){\n  const enlaces = document.querySelectorAll('.navegacion-principal a');       // Seleccionamos los enlaces de la clase .navegacion-principal\n  enlaces.forEach( function( enlace ) {                                       // Como es un arreglo con varios enlaces, necesitamos iterar para seleccionar cada enlace\n    enlace.addEventListener('click', function(e) {                            // (!) El evento \"e\" se pasa automáticamente con un addEventListener\n      e.preventDefault();                                                     // Se quita el efecto por default\n\n      const seccion = document.querySelector(e.target.attributes.href.value); // Nos da la sección a donde nos va a dar el click. El argumento que toma el querySelector nos da el valor a donde va el enlace\n      seccion.scrollIntoView({\n        behavior: 'smooth'                                                   // Da el efecto del scroll más suave (smooth)\n      });      \n    });\n  } );\n}\n\nfunction navegacionFija(){                                                  // Función para dejar el header fijo\n\n  const barra = document.querySelector('.header');                          // Seleccionar el header\n  // Registrar el Intersection Observer\n  const observer = new IntersectionObserver(function(entries){              // \"entries\" nos da la información del elemento a observar. Entries[0] es el primer elemento, porque pueden haber varios\n    // Con el if está\n    if(entries[0].isIntersecting) { \n      barra.classList.remove('fijo');                                       // Removemos la clase 'fijo' cuando se vea la barra\n    } else {\n      barra.classList.add('fijo');                                          // La agregamos cuando no\n    }\n  });\n\n  // Elemento a observar\n  observer.observe(document.querySelector('.informacion'));                // Observe es un método para observar un elemento en particular que seleccionamos con el querySelector\n\n}\n\n","document.addEventListener('DOMContentLoaded', function(){       //'DOMContentLoaded' espera a que todo el documento esté listo para ejecutarse\n  crearGaleria();\n});\n\nfunction crearGaleria(){\n  const galeria = document.querySelector('.galeria-imagenes');    // Para seleccionar la clase .galeria-imagen del html\n\n  for(let i=1; i<=12; i++){\n    // Primero creo las imagenes \n    const imagen = document.createElement('IMG');\n    imagen.src =  `build/img/thumb/${i}.webp`;\n    imagen.dataset.imagenId = i;                                  // Le agrega el id \"i\" a cada imagen para que podamos seleccionarla \n    // Añadir la función de mostrarImagen. Le añadimos la propiedad de que al dar click, se active el mostrarImagen (!) NO OLVIDES EL FOR\n    imagen.onclick = mostrarImagen;\n\n    //Después los agregamos como \"li\" al html\n    const lista = document.createElement('LI');\n    lista.appendChild(imagen); \n    \n    galeria.appendChild(lista);\n}\n}\n\nfunction mostrarImagen(e) {                 // \"e\" es un evento\n  // console.log(e.target);                            // .Target es al que le dimos click (en la consola nos va a mostrar la imagen a la que dimos click)\n  const id = parseInt(e.target.dataset.imagenId);      // parseInt convierte un string con estructura de número a entero (!) SIEMPRE Y CUANDO TENGA EL FORMATO DE NÚMERO ENTERO\n  // console.log(id);\n\n  const imagen = document.createElement('IMG'); // Crear una imagen en el html\n  imagen.src = `build/img/grande/${id}.webp`;\n  // console.log(imagen);                          // Muestra en la consola la imagen (dirección a la imagen)\n\n  // Overlay para mostrar imagen\n  const overlay = document.createElement('DIV');      // Crea un elemento \"div\" en html\n  overlay.appendChild(imagen);                        // Agrega una imagen\n  overlay.classList.add('overlay');                   // Agrega una clase 'overlay' para el CSS \n  \n  // Botón para cerrar la imagen\n  const cerrarImagen = document.createElement('P');   // Crea un \"p\" en el html\n  cerrarImagen.textContent = 'X';                     // Agrega una X al \"p\" del html\n  cerrarImagen.classList.add('btn-cerrar');           // Le agrega la clase \"btn-cerrar\" para CSS\n\n  overlay.appendChild(cerrarImagen);                  // Se agrega al overlay\n  \n  // Cuando se presiona, se cierra la imagen\n  cerrarImagen.onclick = function() {                 // Función para el evento \"onclick\"\n    overlay.remove();                                 // Elimina el overlay\n    body.classList.remove('fijar-body');\n  }\n\n  // Cuando se da click fuera de la imagen, se cierra también\n  overlay.onclick = function() {\n    overlay.remove();\n    body.classList.remove('fijar-body');              // Eliminar la clase \"fijar-body\" para poder hacer scroll luego de cerrar la imagen (o sea, remover el overlay)\n  }\n\n  // Mostrar en el html\n  const body = document.querySelector('body');        // Agrega la imagen del overlay en el body del html\n  body.appendChild(overlay);                          // (!) appendChild AGREGA VARIABLES / CÓDIGO DE JS A HTML\n  body.classList.add('fijar-body');\n}\n"]}